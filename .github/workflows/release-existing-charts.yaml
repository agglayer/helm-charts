name: Release Existing Charts

# This workflow can be triggered manually to create releases for all existing chart versions
# It's designed to be run once when setting up the repository for public releases

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run - only show what would be released'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write
  id-token: write

jobs:
  release-existing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Install chart-releaser
        run: |
          curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.6.1/chart-releaser_1.6.1_linux_amd64.tar.gz"
          tar -xzf cr.tar.gz
          sudo mv cr /usr/local/bin/cr

      - name: Create releases for existing charts
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_OWNER: agglayer
          CR_GIT_REPO: helm-charts
          CR_CHARTS_DIR: charts
          CR_SKIP_EXISTING: true
        run: |
          # Add required Helm repositories
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

          # Create .cr-release-packages directory
          mkdir -p .cr-release-packages

          # Package all charts
          for chart_dir in charts/*/; do
            if [[ -f "${chart_dir}Chart.yaml" ]]; then
              chart_name=$(basename "$chart_dir")
              echo "Packaging chart: $chart_name"

              # Update dependencies if Chart.lock exists
              if [[ -f "${chart_dir}Chart.lock" ]]; then
                helm dependency update "$chart_dir"
              fi

              # Package the chart
              helm package "$chart_dir" --destination .cr-release-packages/
            fi
          done

          # List what would be released
          echo "Charts that would be released:"
          ls -la .cr-release-packages/

          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "Dry run mode - not creating actual releases"
            echo "The following chart packages would be released:"
            for package in .cr-release-packages/*.tgz; do
              echo "  - $(basename $package)"
            done
          else
            echo "Creating GitHub releases for packaged charts..."
            cr upload --skip-existing

            echo "Updating repository index..."
            cr index --push
          fi

      - name: Summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "**Dry run completed** - No releases were created" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Charts that would be released:" >> $GITHUB_STEP_SUMMARY
            for package in .cr-release-packages/*.tgz; do
              echo "- $(basename $package .tgz)" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "**Releases created for all existing chart versions!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Chart packages released:" >> $GITHUB_STEP_SUMMARY
            for package in .cr-release-packages/*.tgz; do
              echo "- $(basename $package .tgz)" >> $GITHUB_STEP_SUMMARY
            done
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Repository index updated at: https://agglayer.github.io/helm-charts/index.yaml" >> $GITHUB_STEP_SUMMARY
          fi
