---
apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: cdk-sequence-sender-statefulset
  labels:
  {{- include "cdk.labels" . | nindent 4 }}
  {{- toYaml .Values.podLabels | nindent 4 }}
    instance: cdk-sequence-sender
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- include "cdk.selectorLabels" . | nindent 6 }}
    {{- toYaml .Values.podLabels | nindent 6 }}
      instance: cdk-sequence-sender
  template:
    metadata:
      labels:
      {{- include "cdk.labels" . | nindent 8 }}
      {{- toYaml .Values.podLabels | nindent 8 }}
        instance: cdk-sequence-sender
      annotations:
        ad.datadoghq.com/cdk-sequence-sender.logs: '[{"source": "cdk-sequence-sender"}]'
    spec:
      containers:
      - name: cdk-sequence-sender
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        command:
        - /bin/sh
        - -c
        - "cdk-node run -cfg /etc/cdk/config.toml -components=sequence-sender"
        volumeMounts:
        - name: cdk-config
          mountPath: /etc/cdk
          readOnly: true
        - name: cdk-sequence-sender-data
          mountPath: /data
          readOnly: false
      volumes:
        - name: cdk-config
          secret:
            secretName: {{ .Values.existingSecret }}
            items:
              - key: {{ .Values.secretItems.config }}
                path: config.toml
              - key: {{ index .Values.secretItems "sequencer-keystore" }}
                path: sequencer.keystore
              - key: {{ index .Values.secretItems "aggregator-keystore" }}
                path: aggregator.keystore
  volumeClaimTemplates:
    - metadata:
        name: cdk-sequence-sender-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.resources.pvc }}

---
apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: cdk-aggregator-statefulset
  labels:
  {{- include "cdk.labels" . | nindent 4 }}
  {{- toYaml .Values.podLabels | nindent 4 }}
    instance: cdk-aggregator
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- include "cdk.selectorLabels" . | nindent 6 }}
    {{- toYaml .Values.podLabels | nindent 6 }}
      instance: cdk-aggregator
  template:
    metadata:
      labels:
      {{- include "cdk.labels" . | nindent 8 }}
      {{- toYaml .Values.podLabels | nindent 8 }}
        instance: cdk-aggregator
      annotations:
        ad.datadoghq.com/cdk-aggregator.logs: '[{"source": "cdk-aggregator"}]'
    spec:
      containers:
      - name: cdk-aggregator
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        command:
        - /bin/sh
        - -c
        - "cdk-node run -cfg /etc/cdk/config.toml -components=aggregator"
        volumeMounts:
        - name: cdk-config
          mountPath: /etc/cdk
          readOnly: true
        - name: cdk-aggregator-data
          mountPath: /data
          readOnly: false
      volumes:
        - name: cdk-config
          secret:
            secretName: {{ .Values.existingSecret }}
            items:
              - key: {{ .Values.secretItems.config }}
                path: config.toml
              - key: {{ index .Values.secretItems "sequencer-keystore" }}
                path: sequencer.keystore
              - key: {{ index .Values.secretItems "aggregator-keystore" }}
                path: aggregator.keystore
  volumeClaimTemplates:
    - metadata:
        name: cdk-aggregator-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.resources.pvc }}
