apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "op-geth.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "op-geth.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ include "op-geth.fullname" . }}
  selector:
    matchLabels:
      {{- include "op-geth.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "op-geth.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "op-geth.serviceAccountName" . }}
      initContainers:
        - name: {{ .Chart.Name }}-genesis
          image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag  }}"
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          command:
          - gcloud
          args:
          - storage
          - cp
          - {{ .Values.config.bucket | quote }}
          - {{ .Values.config.path }}
          volumeMounts:
            - mountPath: {{ .Values.config.path | quote }}
              name: config
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          command:
            - geth
          args:
            - init 
            - --datadir={{ .Values.storage.path }} 
            - --state.scheme=hash 
            - {{ .Values.config.path }}/genesis.json
          volumeMounts:
            - mountPath: {{ .Values.config.path | quote }}
              name: config
              readOnly: true
            - mountPath: {{ .Values.storage.path | quote }}
              name: data
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          command:
            - geth
          args:
            - --http
            - --http.corsdomain=*
            - --http.vhosts=*
            - --http.addr=0.0.0.0
            - --http.port={{ .Values.service.http.port }}
            - --http.api={{ .Values.config.http.api }}
            - --ws
            - --ws.addr=0.0.0.0
            - --ws.port={{ .Values.service.ws.port }}
            - --ws.origins=*
            - --ws.api={{ .Values.config.ws.api }}
            - --log.format=json
            - --syncmode={{ .Values.config.syncmode }} # full or snap
            - --gcmode={{ .Values.config.gcmode }} # full or archieve
            - --nodiscover
            - --maxpeers=0
            - --networkid={{ .Values.config.networkid }}
            - --authrpc.vhosts=*
            - --authrpc.addr=0.0.0.0
            - --authrpc.port={{ .Values.service.authrpc.port }}
            - --authrpc.jwtsecret={{ .Values.config.path }}/jwt.txt
            - --rpc.allow-unprotected-txs
            - --db.engine=pebble
            - --state.scheme=hash
            - --metrics={{ .Values.config.metrics }}
            - --metrics.port={{ .Values.service.metrics.port }}
            - --metrics.addr=0.0.0.0
            - --miner.gaslimit={{ .Values.config.miner.gasLimit | int64 }}
            - --txpool.accountqueue={{ .Values.config.txpool.accountqueue }}
            - --txpool.accountslots={{ .Values.config.txpool.accountslots }}
            - --txpool.globalqueue={{ .Values.config.txpool.globalqueue }}
            - --txpool.globalslots={{ .Values.config.txpool.globalslots }}
            - --datadir={{ .Values.storage.path }}
            - --netrestrict=240.8.0.0/14
            - --rollup.disabletxpoolgossip=true
            {{ if not .Values.sequencer }} # non-sequencer
            - --rollup.sequencerhttp=http://sequencer-op-geth-0.sequencer-op-geth:8545
            {{ end }}
            {{- range .Values.config.extraOptions }} # extra args
            - --{{ . }}
            {{- end}}
          ports:
            - name: authrpc
              containerPort: {{ .Values.service.authrpc.port }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.service.http.port }}
              protocol: TCP
            - name: ws
              containerPort: {{ .Values.service.ws.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.metrics.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.config.path | quote }}
              name: config
              readOnly: true
            - mountPath: {{ .Values.storage.path | quote }}
              name: data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: {{ .Values.storage.storageClassName }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.storage.size }}
