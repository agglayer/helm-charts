postgresql:
  auth:
    username: &dbUser blockscout
    password: &dbPass changeme
    database: &dbName blockscout

replicaCount: 1

name: blockscout

image:
  repository: docker.io/blockscout/blockscout
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "4.1.8"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 4000
  namedPort: http

# Additional Ingress
apiVersionOverrides:
  # -- Override the ingress API version
  ingress: "" # networking.k8s.io/v1beta1
  
ingress:
  enabled: false
  # -- The ingress class name
  ingressClassName: ""
  annotations: {}
  paths:
   - /
  pathType: Prefix
  # -- Extra ingress paths
  extraPaths: []
  hosts: []
  tls: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 90
  targetMemoryUtilizationPercentage: 90

nodeSelector: {}

tolerations: []

affinity: {}

readinessProbe:
  # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 3
  # -- Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 10
  # -- How often (in seconds) to perform the [probe]
  periodSeconds: 10
  # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  # -- Number of seconds after which the [probe] times out
  timeoutSeconds: 1
livenessProbe:
  # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 3
  # -- Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 10
  # -- How often (in seconds) to perform the [probe]
  periodSeconds: 10
  # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  # -- Number of seconds after which the [probe] times out
  timeoutSeconds: 1

backend:
  local:
    enabled: true
  remoteDatabaseHost: ""
  dbPort: 5432
  dbUsername: *dbUser 
  dbPassword: *dbPass 
  dbName: *dbName 

blockchain:
  jsonRpcURL: "https://rpc-edgenet.polygon.technology/"
  WebSocketURL: "wss://rpc-edgenet.polygon.technology/ws"
  config:
    coinSymbol: EDGE
    coinName: Edge Coin
    chainID: 81001
    logo: /images/blockscout_logo.svg
    logoFooter: /images/blockscout_logo.svg
    etheriumJsonRpcHTTPUrl: ""
    etheriumJsonRpcWSUrl: ""
    etheriumJsonRpcTraceUrl: ""
    # -- https://docs.blockscout.com/for-developers/manual-deployment
    secretKeyBase: "VTIB3uHDNbvrY0+60ZWgUoUBKDn9ppLR8MI4CpRz4/qLyEFs54ktJfaNT6Z221No"
    databaseURL: ""
    ectoUseSSL: false
    mixEnv: prod
    disableExchangeRates: true
    fetchRewardWay: manual
    indexerDisableBlockRewardFetcher: true
    indexerDisableInternalTransactionsFetcher: true
    indexerDisableCatalogedTokenUpdaterFetcher: true
    indexerEmptyBlocksSanitizerBatchSize: 1000
    indexerDisablePendingTransactionsFetcher: true
