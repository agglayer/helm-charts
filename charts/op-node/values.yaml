env: bali

podLabels:
  name: myname
  business_unit: agglayer
  role: myrole
  partner: Polygon
  network: mynetwork

replicas: 1
sequencer: true

initContainer:
  image:
    pullPolicy: IfNotPresent
    repository: google/cloud-sdk
    tag: 537.0.0-slim

container:
  image:
    pullPolicy: IfNotPresent
    repository: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node
    tag: v1.13.5

storage:
  path: /safedb
  size: 50Gi
  storageClassName: standard

service:
  rpc:
    port: 9545
  metrics:
    port: 7300
  annotations: {}

serviceAccount:
  create: true
  automount: true
  annotations: {}

config:
  extraOptions: {}

  bucket: gs://path/to/bucket/files/*
  path: /etc/op-node

  chainId: 1

  key:
    useKms: true
    address: 0x0000000000000000000000000000000000000000
    path: path/to/key

  syncMode: consensus-layer # consensus-layer or execution-layer; execution-layer for snap

  l1:
    rpc: "http://"
    beacon: "http://"

  l2:
    opGethReleaseName: op-geth

  metrics: true

  log:
    environment: development # "production" or "development"
    level: info

resources:
  limits:
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 2Gi

livenessProbe:
  httpGet:
    path: /healthz
    port: rpc
readinessProbe:
  httpGet:
    path: /healthz
    port: rpc

podSecurityContext:
  fsGroup: 1001
  fsGroupChangePolicy: Always
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  privileged: false
  readOnlyRootFilesystem: false
  runAsGroup: 0
  runAsNonRoot: true
  runAsUser: 1001
  seccompProfile:
    type: RuntimeDefault

nodeSelector: {}

tolerations: []

affinity: {}
