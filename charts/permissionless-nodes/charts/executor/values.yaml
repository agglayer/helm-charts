# Default values for executor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hermeznetwork/zkevm-prover
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

command: ["zkProver"]
args: ["-c", "/etc/zkevm/executor.json"]

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  executorPort: 50071
  mtclientPort: 50061

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: gce
  hosts:
    - host: executor.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 8
    memory: 64Gi
  requests:
    cpu: 2
    memory: 16Gi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: config
    configMap:
      name: executor-config
      items:
        - key: "config_executor.json"
          path: "executor.json"

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: config
    mountPath: "/etc/zkevm"
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
