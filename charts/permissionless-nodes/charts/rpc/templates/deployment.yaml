apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rpc.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "rpc.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rpc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        ad.datadoghq.com/{{ .Chart.Name }}.check_names: |
          ["openmetrics"]
        ad.datadoghq.com/{{ .Chart.Name }}.init_configs: |
          [{}]
        ad.datadoghq.com/{{ .Chart.Name }}.instances: |
          [
            {
              "openmetrics_endpoint": "http://%%host%%:9091/metrics",
              "metrics": [
                "etherman*",
                "state_executor*",
                "synchronizer*"
              ]
            }
          ]
        {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "rpc.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rpc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
              protocol: TCP
            - name: websocket
              containerPort: {{ .Values.service.websocketsPort }}
              protocol: TCP
{{/*              disabling liveness/readiness probes for initial launch - wb */}}
{{/*          livenessProbe:*/}}
{{/*            {{- toYaml .Values.livenessProbe | nindent 12 }}*/}}
{{/*          readinessProbe:*/}}
{{/*            {{- toYaml .Values.readinessProbe | nindent 12 }}*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/etc/zkevm"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "rpc.fullname" . }}-config
            items:
              - key: "config.toml"
                path: "config.toml"
              - key: genesis
                path: "genesis.json"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
