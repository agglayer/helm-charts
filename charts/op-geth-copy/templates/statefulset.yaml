{{- $opSecrets := (lookup "v1" "Secret" .Release.Namespace .Values.existingSecret) }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "op-geth.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "op-geth.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "op-geth.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "op-geth.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "op-geth.serviceAccountName" . }}
      # initContainers:
      #   - name: download-genesis
      #     image: google/cloud-sdk:latest
      #     command: ["sh", "-c"]
      #     args:
      #     - |
      #       gsutil cp gs://{{ .Values.genesisFileGCP.bucket }}/{{ .Values.genesisFileGCP.object }} /genesis/genesis.json
      #     volumeMounts:
      #       - mountPath: "/genesis"
      #         name: genesis
      terminationGracePeriodSeconds: 300
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          command:
            - geth
          envFrom:
            - configMapRef:
                name: {{ include "op-geth.fullname" . }}
          ports:
            - name: authrpc
              containerPort: {{ .Values.service.authrpc.port }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.service.http.port }}
              protocol: TCP
            - name: ws
              containerPort: {{ .Values.service.ws.port }}
              protocol: TCP
            - name: p2p-tcp
              containerPort: {{ .Values.service.p2pTCP.port }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ .Values.service.p2pUDP.port }}
              protocol: UDP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # - mountPath: "/genesis"
            #   name: genesis
            #   readOnly: true
            - mountPath: "/chainconfig"
              name: config
              readOnly: true
            - mountPath: {{ .Values.storage.path | quote }}
              name: data
      volumes:
        # - name: genesis
        #   emptyDir: {}
        - name: config
          projected:
            sources:
              - secret:
                  name: {{ .Values.existingSecret }}
                  items:
                    - key: "jwt"
                      path: "jwt.txt"
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.storage.size }}
