# Polygon Edge Chart

A Helm chart for Polygon Edge, an extendable framework for building Ethereum-compatible blockchain solutions.

Additional information on Polygon Edge can be found [here](https://docs.polygon.technology/docs/edge/overview)

## Additional Information

This chart installs [polygon-edge](https://github.com/0xPolygon/polygon-edge).

## Prerequisites

- Kubernetes 1.15+
- Helm v3.0.0+

## Installing the Chart

Clone the chart down and choose the supported secrets backend

```console
git clone https://github.com/trapesys/helm-charts.git
cd helm-charts/trapesys/polygon-edge
```

### Local
Run the following to install the chart with a release named `polygon-edge`:

```
helm install -n polygon-edge polygon-edge .

```
### AWS

Install using AWS SSM Parameters store secrets backend
```console
# Installs Polygon Edge using AWS region `us-east-1` and SSM parameter prefix `/polygon-edge/nodes`  
helm install -n polygon-edge polygon-edge --set secretsManagerConfig.type=aws-ssm --set secretsManagerConfig.aws.region=<region> --set secretsManagerConfig.aws.ssmParameterPath=/polygon-edge/nodes
```

### GCP
Install using GCP Secrets manager backend
```console
# Installs Polygon Edge using GCP project ID `<project>` and credentials file located at `/path/to/credentials.json`  
helm install -n polygon-edge polygon-edge --set secretsManagerConfig.type=gcp-ssm --set secretsManagerConfig.gcp.projectId=<project> --set secretsManagerConfig.gcp.credentialKey=/path/to/credentials.json
```
### Hashicorp Vault
Install using Hashicorp Vault backend
```console
# Installs Polygon Edge using Vault server `<server-url>` and token `<vault-token>`  
helm install -n polygon-edge polygon-edge --set secretsManagerConfig.type=hashicorp-vault --set secretsManagerConfig.vault.serverUrl=<server-url> --set secretsManagerConfig.vault.token=<vault-token>
```

## Genesis

## General parameters

| Key | Type | Default | Description |
|-----|------|---------|-------------|
{{- range .Values }}
  {{- if not (or  (hasPrefix "config" .Key) (hasPrefix "secretsManagerConfig" .Key) (hasPrefix "genesis" .Key) (hasPrefix "validator" .Key) ) }}
| {{ .Key }} | {{ .Type }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} |
  {{- end }}
{{- end }}

## Polygon Edge Config

| Key | Type | Default | Description |
|-----|------|---------|-------------|
{{- range .Values }}
  {{- if hasPrefix "config" .Key }}
| {{ .Key }} | {{ .Type }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} |
  {{- end }}
{{- end }}

## Polygon Edge Secrets Manager Config

| Key | Type | Default | Description |
|-----|------|---------|-------------|
{{- range .Values }}
  {{- if hasPrefix "secretsManagerConfig" .Key }}
| {{ .Key }} | {{ .Type }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} |
  {{- end }}
{{- end }}

## Polygon Edge Genesis

| Key | Type | Default | Description |
|-----|------|---------|-------------|
{{- range .Values }}
  {{- if hasPrefix "genesis" .Key }}
| {{ .Key }} | {{ .Type }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} |
  {{- end }}
{{- end }}

## Polygon Edge Validator

| Key | Type | Default | Description |
|-----|------|---------|-------------|
{{- range .Values }}
  {{- if hasPrefix "validator" .Key }}
| {{ .Key }} | {{ .Type }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} |
  {{- end }}
{{- end }}

----------------------------------------------
Autogenerated from chart metadata using [helm-docs](https://github.com/norwoodj/helm-docs)

[affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
[BackendConfigSpec]: https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig#backendconfigspec_v1beta1_cloudgooglecom
[FrontendConfigSpec]: https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#configuring_ingress_features_through_frontendconfig_parameters
[HPA]: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
[MetricRelabelConfigs]: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs
[Node selector]: https://kubernetes.io/docs/user-guide/node-selection/
[probe]: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
[RelabelConfigs]: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
[Tolerations]: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
[TopologySpreadConstraints]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
[values.yaml]: values.yaml
