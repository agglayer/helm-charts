apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "polygon-edge.validator.fullname" . }}
  labels:
    {{- include "polygon-edge.labels" (dict "context" . "component" .Values.validator.name "name" .Values.validator.name) | nindent 4 }}
    app.kubernetes.io/version: {{ default (include "polygon-edge.defaultTag" .) .Values.validator.image.tag | quote }}
spec:
  serviceName: {{ template "polygon-edge.validator.fullname" . }}-headless
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "polygon-edge.selectorLabels" (dict "context" . "name" .Values.validator.name) | nindent 6 }}
  revisionHistoryLimit: 5
  replicas: {{ .Values.validator.replicas }}
  {{- if .Values.validator.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- if .Values.validator.persistence.labels.enabled }}
        labels:
          {{- include "polygon-edge.labels" (dict "context" . "component" .Values.validator.name "name" .Values.validator.name) | nindent 10 }}
      {{- end }}
      {{- with .Values.validator.persistence.annotations  }}
        annotations:
  {{ toYaml . | indent 8 }}
      {{- end }}
      spec:
{{ toYaml .Values.validator.volumeClaimTemplate | indent 8 }}
    {{- end }}
  template:
    metadata:
      {{- with (mergeOverwrite (deepCopy .Values.global.podAnnotations) .Values.validator.podAnnotations) }}
      annotations:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "polygon-edge.labels" (dict "context" . "component" .Values.validator.name "name" .Values.validator.name) | nindent 8 }}
        app.kubernetes.io/version: {{ default (include "polygon-edge.defaultTag" .) .Values.validator.image.tag | quote }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podLabels) .Values.validator.podLabels) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.validator.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.securityContext }}
      securityContext: {{- toYaml .Values.global.securityContext | nindent 8 }}
      {{- end }}
      initContainers:
        - name: render-secrets-config
          image: busybox:1.35 
          imagePullPolicy: {{ default .Values.global.image.imagePullPolicy "IfNotPresent" }}
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - /bin/sh
            - -c
            - |-
              cat {{ join "/" (list .Values.config.dataDir "secrets" "secretsManagerConfig.tpl.json") | quote }} | \
                sed "s/<NODE_NAME>/$(HOSTNAME)/g" > {{ join "/" (list .Values.config.dataDir "config-tmp" "secretsManagerConfig.json") | quote }} 
          workingDir: {{ .Values.config.dataDir | quote }}
          volumeMounts:
          - name: config-tmp
            mountPath: {{ join "/" (list .Values.config.dataDir "config-tmp") | quote }}
          - name: secrets-manager-config
            readOnly: true
            mountPath: {{ join "/" (list .Values.config.dataDir "secrets" ) | quote }}
      {{- if .Values.validator.initContainers }}
      {{- toYaml .Values.validator.initContainers | nindent 6 }}
      {{- end }}
      containers:
      - name: {{ .Values.validator.name }}
        image: {{ default .Values.global.image.repository .Values.validator.image.repository }}:{{ default (include "polygon-edge.defaultTag" .) .Values.validator.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.validator.image.imagePullPolicy }}
        args:
          - server
          - --access-control-allow-origins
          - {{ .Values.validator.serverConfig.accessControlAllowOrigins | quote }} 
          - --block-time
          - {{ .Values.validator.serverConfig.blockTime | quote }}
          - --json-rpc-batch-request-limit
          - {{ .Values.validator.serverConfig.jsonRPCBatchRequestLimit | quote }}
          - --json-rpc-block-range-limit
          - {{ .Values.validator.serverConfig.jsonRPCBlockRangeLimit | quote }}
          - --max-enqueued
          - {{ .Values.validator.serverConfig.maxEnqueued | quote }}
          - --max-peers
          - {{ .Values.validator.serverConfig.maxPeers | quote }}
          - --price-limit
          - {{ .Values.validator.serverConfig.priceLimit | quote }}
          - --libp2p
          - {{ join ":" (list "0.0.0.0" .Values.validator.service.libp2p.port) | quote }} 
          - --grpc-address
          - {{ join ":" (list "0.0.0.0" .Values.validator.service.grpc.port) | quote }}
          - --jsonrpc
          - {{ join ":" (list "0.0.0.0" .Values.validator.service.jsonRPC.port) | quote }}
          - --data-dir
          - {{ .Values.config.dataDir | quote }}
          - --log-level
          - {{ .Values.validator.logging.level }}
          - --chain
          - {{ join "/" (list .Values.config.dataDir "shared" "genesis.json") | quote }}
        {{- if not (eq .Values.secretsManagerConfig.type "local") }}
          - --secrets-config
          - {{ join "/" (list .Values.config.dataDir "config-tmp" "secretsManagerConfig.json") | quote }}
        {{- end }}
        {{- if .Values.validator.metrics.enabled }}
          - --prometheus
          - ':8088'
        {{- end }}
        {{- if eq .Values.validator.logging.format "json" }}
          - --json
        {{- end }}
        {{- if .Values.config.dns }}
          - --dns
          - dns4/$(HOSTNAME).{{ include "polygon-edge.validator.fullname" .}}-headless.{{ .Release.Namespace }}.svc.cluster.local
        {{- end }}
        {{- with .Values.validator.extraArgs }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
        {{- if .Values.validator.containerSecurityContext }}
        securityContext: {{- toYaml .Values.validator.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.config.datadog.enabled }}
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- end }}
          {{- if .Values.secretsManagerConfig.vault.token }}
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "polygon-edge.fullname" . }}-secrets-manager-config
                key: vaultToken
                optional: false
          {{- end }}
          {{- with .Values.validator.extraEnvs }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.validator.envFrom }}
        envFrom: {{- toYaml . | nindent 8 }}
        {{- end }}
        workingDir: {{ .Values.config.dataDir | quote }}
        volumeMounts:
          - name: data
            mountPath: {{ .Values.config.dataDir | quote }}
          - name: config-tmp
            mountPath: {{ join "/" (list .Values.config.dataDir "config-tmp") | quote }}
          - name: genesis
            mountPath: {{ join "/" (list .Values.config.dataDir "shared") | quote }}
          - name: secrets-manager-config
            readOnly: true
            mountPath: {{ join "/" (list .Values.config.dataDir "secrets") | quote }}
        {{- if .Values.validator.volumeMounts }}
{{- toYaml .Values.validator.volumeMounts | nindent 8}}
        {{- end }}
        ports:
        - name: libp2p
          containerPort: {{ .Values.validator.service.libp2p.port }}
          protocol: TCP
        - name: grpc
          containerPort: {{ .Values.validator.service.grpc.port }}
          protocol: TCP
        - name: json-rpc
          containerPort: {{ .Values.validator.service.jsonRPC.port }}
          protocol: TCP
        {{ if .Values.validator.metrics.enabled }}
        - name: metrics
          containerPort: 8088
          protocol: TCP
        {{- end }}
        livenessProbe:
          exec:
            command:
              - polygon-edge
              - status
          initialDelaySeconds: {{ .Values.validator.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.validator.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.validator.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.validator.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.validator.livenessProbe.failureThreshold }}
        readinessProbe:
          exec:
            command:
              - polygon-edge
              - status
          initialDelaySeconds: {{ .Values.validator.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.validator.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.validator.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.validator.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.validator.readinessProbe.failureThreshold }}
        {{- with .Values.validator.resources }}
        resources:
          {{- toYaml .Values.validator.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.validator.lifecycle }}
        lifecycle:
          {{- toYaml .Values.validator.lifecycle | nindent 10 }}
        {{- end }}
      {{- with .Values.validator.extraContainers }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- if .Values.validator.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.validator.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.validator.tolerations }}
      tolerations:
{{- toYaml .Values.validator.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.validator.affinity }}
      affinity:
{{- toYaml .Values.validator.affinity | nindent 8 }}
    {{- end }}
    {{- with .Values.validator.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- range $constraint := . }}
      - {{ toYaml $constraint | nindent 8 | trim }}
        {{- if not $constraint.labelSelector }}
        labelSelector:
          matchLabels:
            {{- include "polygon-edge.selectorLabels" (dict "context" $ "name" $.Values.validator.name) | nindent 12 }}
        {{- end }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ template "polygon-edge.validatorServiceAccountName" . }}
      {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
        - name: config-tmp
          emptyDir: {}
        - name: genesis
          configMap:
            name: {{ template "polygon-edge.genesis.fullname" . }}
        - name: secrets-manager-config
          secret:
            secretName: {{ template "polygon-edge.fullname" . }}-secrets-manager-config
            items:
              - key: secretsManagerConfig.json
                path: secretsManagerConfig.tpl.json
      {{- if .Values.secretsManagerConfig.gcp.credentialKey }}
              - key: credentials.json
                path: credentials.json
      {{- end }} 
      {{- if .Values.validator.volumes }}
{{- toYaml .Values.validator.volumes | nindent 6}}
      {{- end }}
{{- if .Values.validator.priorityClassName }}
      priorityClassName: {{ .Values.validator.priorityClassName }}
{{- end }}
