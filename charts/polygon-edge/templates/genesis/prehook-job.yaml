{{- if not .Values.genesis.chainJson }}
{{- if gt (.Values.validator.replicas | toDecimal) 0 }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "polygon-edge.genesis.fullname" . }}
  labels:
    {{- include "polygon-edge.labels" (dict "context" . "component" .Values.genesis.name "name" .Values.genesis.name) | nindent 4 }}
    app.kubernetes.io/version: {{ default (include "polygon-edge.defaultTag" .) .Values.genesis.image.tag | quote }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
spec:
  template:
    metadata:
      {{- with (mergeOverwrite (deepCopy .Values.global.podAnnotations) .Values.genesis.podAnnotations) }}
      annotations:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "polygon-edge.labels" (dict "context" . "component" .Values.genesis.name "name" .Values.genesis.name) | nindent 8 }}
        app.kubernetes.io/version: {{ default (include "polygon-edge.defaultTag" .) .Values.genesis.image.tag | quote }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podLabels) .Values.genesis.podLabels) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: OnFailure
      {{- with .Values.genesis.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.securityContext }}
      securityContext: {{- toYaml .Values.global.securityContext | nindent 8 }}
      {{- end }}
      initContainers:
      - name: render-busybox
        image: busybox:1.35 
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy "IfNotPresent" }}
        command:
          - /bin/sh
          - -c
          - |
            # Iterate through validator node replicas replica. 
            for i in $(seq 1 {{ .Values.validator.replicas }});
            do
              vn=$((i-1))
              echo "node: $vn"
              mkdir -p {{ join "/" (list .Values.config.dataDir "config-tmp"  (printf "%s-%s" (include "polygon-edge.validator.fullname" .) "${vn}")) }}
              cat {{ join "/" (list .Values.config.dataDir "secrets" "secretsManagerConfig.tpl.json") | quote }} | \
                sed "s/<NODE_NAME>/{{ printf "%s-%s" (include "polygon-edge.validator.fullname" .) "${vn}" }}/g" > \
                {{ join "/" (list .Values.config.dataDir "config-tmp" (printf "%s-%s" (include "polygon-edge.validator.fullname" .) "${vn}") "secretsManagerConfig.json") | quote }} 
            done
        workingDir: {{ .Values.config.dataDir | quote }}
        volumeMounts:
        - name: config-tmp
          mountPath: {{ join "/" (list .Values.config.dataDir "config-tmp") | quote }}
        - name: secrets-manager-config
          readOnly: true
          mountPath: {{ join "/" (list .Values.config.dataDir "secrets") | quote }}
      {{- if .Values.secretsManagerConfig.initSecrets }}
      - name: init-secrets
        image: {{ default .Values.global.image.repository .Values.genesis.image.repository }}:{{ default (include "polygon-edge.defaultTag" .) .Values.genesis.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy "IfNotPresent" }}
        env:
        {{- if .Values.secretsManagerConfig.vault.token }}
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "polygon-edge.fullname" . }}-secrets-manager-config
                key: vaultToken
                optional: false
          {{- end }}
          {{- with .Values.genesis.extraEnvs }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.genesis.envFrom }}
        envFrom: {{- toYaml . | nindent 8 }}
        {{- end }}
        command:
          - /bin/sh
          - -c
          - |
            # Iterate through validator node replicas replica. 
            for i in $(seq 1 {{ .Values.validator.replicas }});
            do
              vn=$((i-1))
              echo "Checking for drift"

              polygon-edge secrets init {{ if eq .Values.secretsManagerConfig.type "local" }} --data-dir {{ .Values.config.dataDir }} {{ else }} --config {{ join "/" (list .Values.config.dataDir "config-tmp" (printf "%s-%s" (include "polygon-edge.validator.fullname" .) "${vn}") "secretsManagerConfig.json") | quote }} {{ end }}
            done
        volumeMounts:
        - name: config-tmp
          mountPath: {{ join "/" (list .Values.config.dataDir "config-tmp") | quote }}
        - name: secrets-manager-config
          readOnly: true
          mountPath: {{ join "/" (list .Values.config.dataDir "secrets") | quote }}
      {{- end }}
      - name: genesis
        image: {{ default .Values.global.image.repository .Values.genesis.image.repository }}:{{ default (include "polygon-edge.defaultTag" .) .Values.genesis.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.genesis.image.imagePullPolicy }}
        command:
          - /bin/sh
          - -c
          - |
            # This mess of Helm templating loops through each replica and grabs their needed address/nodeID.
            polygon-edge genesis \
            {{- if .Values.genesis.chainConfig.premine }}
              --premine \
            {{ .Values.genesis.chainConfig.premine | quote }} \
            {{- end }}
            {{- if .Values.genesis.chainConfig.maxValidatorCount }}
              --max-validator-count \
            {{ .Values.genesis.chainConfig.maxValidatorCount | quote }} \
            {{- end }}
            {{- if .Values.genesis.chainConfig.ibftValidatorType }}
              --ibft-validator-type \
            {{ .Values.genesis.chainConfig.ibftValidatorType | quote }} \
            {{- end }}
            {{- if .Values.genesis.chainConfig.blockGasLimit}}
              --block-gas-limit \
            {{ .Values.genesis.chainConfig.blockGasLimit | quote }} \
            {{- end }}
            {{- if .Values.genesis.chainConfig.consensus }}
              --consensus \
            {{ .Values.genesis.chainConfig.consensus | quote }} \
            {{- end }}
              --chain-id \
            {{ default "100" .Values.global.chain.chainID | quote }} \
            {{- if .Values.genesis.chainConfig.minValidatorCount }} \
              --min-validator-count \
            {{ .Values.genesis.chainConfig.minValidatorCount | quote }} \
            {{- end }}
            {{- if .Values.genesis.chainConfig.epochSize }}
              --epoch-size \
            {{ .Values.genesis.chainConfig.epochSize | quote }} \
            {{- end }}
            {{- if .Values.genesis.chainConfig.pos }}
              --pos \
            {{- end }}
              --name {{ .Values.genesis.chainConfig.name }} \
              --dir {{ join "/" (list .Values.config.dataDir "config-tmp" "genesis.json") | quote }} \
              $(farg=""; for i in $(seq 1 {{ .Values.validator.replicas }}); do farg=" ${farg} --ibft-validator"; farg=" ${farg} $(polygon-edge secrets output --validator {{ if eq .Values.secretsManagerConfig.type "local" }} --data-dir {{ .Values.config.dataDir }} {{ else }} --config {{ join "/" (list .Values.config.dataDir "config-tmp" (printf "%s-%s" (include "polygon-edge.validator.fullname" .) "$((i-1))") "secretsManagerConfig.json") | quote }} {{ end }}):$(polygon-edge secrets output --bls {{ if eq .Values.secretsManagerConfig.type "local" }} --data-dir {{ .Values.config.dataDir }} {{ else }} --config {{ join "/" (list .Values.config.dataDir "config-tmp" (printf "%s-%s" (include "polygon-edge.validator.fullname" .) "$((i-1))") "secretsManagerConfig.json") | quote }} {{ end }}) --bootnode /dns4/{{ printf "%s-%s" (include "polygon-edge.validator.fullname" .) "$((i-1))" }}.{{ include "polygon-edge.validator.fullname" .}}-headless.{{ .Release.Namespace }}.svc.cluster.local/tcp/{{ .Values.validator.service.libp2p.port }}/p2p/$(polygon-edge secrets output --node-id {{ if (eq .Values.secretsManagerConfig.type "local") }} --data-dir {{ .Values.config.dataDir }} {{ else }} --config {{ join "/" (list .Values.config.dataDir "config-tmp" (printf "%s-%s" (include "polygon-edge.validator.fullname" .) "$((i-1))") "secretsManagerConfig.json") | quote }} {{ end }})"; done; echo -n "${farg}")
        {{- if .Values.genesis.containerSecurityContext }}
        securityContext: {{- toYaml .Values.genesis.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.secretsManagerConfig.vault.token }}
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "polygon-edge.fullname" . }}-secrets-manager-config
                key: vaultToken
                optional: false
          {{- end }}
          {{- with .Values.genesis.extraEnvs }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.genesis.envFrom }}
        envFrom: {{- toYaml . | nindent 8 }}
        {{- end }}
        workingDir: {{ .Values.config.dataDir | quote }}
        volumeMounts:
          - name: config-tmp
            mountPath: {{ join "/" (list .Values.config.dataDir "config-tmp") | quote }}
          - name: secrets-manager-config
            readOnly: true
            mountPath: {{ join "/" (list .Values.config.dataDir "secrets") | quote }}
        {{- if .Values.genesis.volumeMounts }}
{{- toYaml .Values.genesis.volumeMounts | nindent 8}}
        {{- end }}
        {{- with .Values.genesis.resources }}
        resources:
          {{- toYaml .Values.genesis.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.genesis.lifecycle }}
        lifecycle:
            {{- toYaml .Values.genesis.lifecycle | nindent 10 }}
          {{- end }}
      containers:
      - name: genesis-config-injector
        image: curlimages/curl:7.85.0
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.genesis.image.imagePullPolicy }}
        command:
          - /bin/sh
          - -c
          - |
            curl --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" --header "content-type: application/json-patch+json" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt https://kubernetes.default.svc/api/v1/namespaces/{{ .Release.Namespace }}/configmaps/{{ template "polygon-edge.genesisServiceAccountName" . }} -XPATCH -d "[{\"op\": \"add\", \"path\": \"/data/genesis.json\", \"value\": \"$(cat {{ join "/" (list .Values.config.dataDir "config-tmp" "genesis.json") }} | tr -d '\n\t' | sed 's/"/\\"/g')\"}]"
        {{- if .Values.genesis.containerSecurityContext }}
        securityContext: {{- toYaml .Values.genesis.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- if .Values.secretsManagerConfig.vault.token }}
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "polygon-edge.fullname" . }}-secrets-manager-config
                key: vaultToken
                optional: false
          {{- end }}
          {{- with .Values.genesis.extraEnvs }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.genesis.envFrom }}
        envFrom: {{- toYaml . | nindent 8 }}
        {{- end }}
        workingDir: {{ .Values.config.dataDir | quote }}
        volumeMounts:
          - name: config-tmp
            mountPath: {{ join "/" (list .Values.config.dataDir "config-tmp") | quote }}
          - name: secrets-manager-config
            readOnly: true
            mountPath: {{ join "/" (list .Values.config.dataDir "secrets") | quote }}
        {{- if .Values.genesis.volumeMounts }}
{{- toYaml .Values.genesis.volumeMounts | nindent 8}}
        {{- end }}
        {{- with .Values.genesis.resources }}
        resources:
          {{- toYaml .Values.genesis.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.genesis.lifecycle }}
        lifecycle:
          {{- toYaml .Values.genesis.lifecycle | nindent 10 }}
        {{- end }}
      {{- with .Values.genesis.extraContainers }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- if .Values.genesis.nodeSelector }}
        {{- with .Values.genesis.extraContainers }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
        nodeSelector:
  {{- toYaml .Values.genesis.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.genesis.tolerations }}
      tolerations:
{{- toYaml .Values.genesis.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.genesis.affinity }}
      affinity:
{{- toYaml .Values.genesis.affinity | nindent 8 }}
    {{- end }}
    {{- with .Values.genesis.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- range $constraint := . }}
      - {{ toYaml $constraint | nindent 8 | trim }}
        {{- if not $constraint.labelSelector }}
        labelSelector:
          matchLabels:
            {{- include "polygon-edge.selectorLabels" (dict "context" $ "name" $.Values.genesis.name) | nindent 12 }}
        {{- end }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ template "polygon-edge.genesisServiceAccountName" . }}
      {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
        - name: config-tmp
          emptyDir: {}
        - name: genesis
          configMap:
            name: {{ template "polygon-edge.genesis.fullname" . }}
        - name: secrets-manager-config
          secret:
            secretName: {{ template "polygon-edge.fullname" . }}-secrets-manager-config
            items:
              - key: secretsManagerConfig.json
                path: secretsManagerConfig.tpl.json
      {{- if .Values.secretsManagerConfig.gcp.credentialKey }}
              - key: credentials.json
                path: credentials.json
      {{- end }} 
      {{- if .Values.genesis.volumes }}
{{- toYaml .Values.genesis.volumes | nindent 6}}
      {{- end }}
{{- if .Values.genesis.priorityClassName }}
      priorityClassName: {{ .Values.genesis.priorityClassName }}
{{- end }}
{{- end }}
{{- end }}
