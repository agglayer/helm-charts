{{- $opSecrets := (lookup "v1" "Secret" .Release.Namespace "op-secrets") }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aggkit.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  config.toml: |
    NetworkID = {{ .Values.config.l2.rollupId | int }}
    PathRWData = {{ .Values.storage.path | quote }}
    L1URL = {{ index $opSecrets.data "l1RpcURL" | b64dec | quote }}
    L2URL = {{ .Values.config.l2.rpcURL | quote }}
    AggLayerURL = {{ .Values.config.agglayerURL | quote }}

    ForkId = {{ .Values.config.forkId | quote }}
    ContractVersions = {{ .Values.config.contractsVersion | quote }}
    IsValidiumMode = {{ eq .Values.config.isValidium true }}

    L2Coinbase = {{ .Values.config.l2.sequencerAddress | quote }}
    SequencerPrivateKeyPath = ""
    SequencerPrivateKeyPassword = ""

    AggregatorPrivateKeyPath = ""
    AggregatorPrivateKeyPassword  = ""
    SenderProofToL1Addr = ""
    polygonBridgeAddr = {{ .Values.config.bridgeAddress | quote }}

    RPCURL = {{ .Values.config.l2.rpcURL | quote }}
    WitnessURL = ""

    rollupCreationBlockNumber = {{ .Values.config.l1.rollupBlockNumber | int }}
    rollupManagerCreationBlockNumber = {{ .Values.config.l1.rollupManagerBlockNumber | int }}
    genesisBlockNumber = {{ .Values.config.l1.rollupManagerBlockNumber | int }}

    [L1Config]
    chainId = {{ .Values.config.l1.chainId | int }}
    polygonZkEVMGlobalExitRootAddress = {{ .Values.config.l1.globalExitRootAddress | quote }}
    polygonRollupManagerAddress = {{ .Values.config.l1.rollupManagerAddress | quote }}
    polTokenAddress = {{ .Values.config.l1.polTokenAddress | quote }}
    polygonZkEVMAddress = {{ .Values.config.l1.rollupAddress | quote }}

    [L2Config]
    GlobalExitRootAddr = {{ .Values.config.l2.globalExitRootAddress | quote }}

    [Log]
    Environment = {{ .Values.config.log.environment | quote }}
    Level = {{ .Values.config.log.level | quote }}
    Outputs = ["stderr"]

    [RPC]
    Port = {{ .Values.container.ports.aggsender | int }}

    {{- if has "aggsender" .Values.config.components }}

    [AggSender]
    {{ if .Values.config.aggSender.privateKey.keyName }}
    AggsenderPrivateKey = {Method ="GCP", KeyName={{ .Values.config.aggSender.privateKey.keyName | quote }}}
    {{ else }}
    AggsenderPrivateKey = {Path = "/etc/aggkit/sequencer.keystore", Password = {{ index $opSecrets.data "sequencerPrivateKeyPassword" | b64dec | quote }}}
    {{ end }}

    CertificateSendInterval = {{ .Values.config.aggSender.certificateSendInterval | quote }}
    CheckSettledInterval = {{ .Values.config.aggSender.checkSettledInterval | quote }}
    MaxCertSize = {{ .Values.config.aggSender.maxCertSize | int }}
    SaveCertificatesToFilesPath = {{ .Values.config.aggSender.saveCertificatesToFilesPath | quote }}
    BlockFinality="FinalizedBlock"
    Mode={{ .Values.config.aggSender.mode | quote }}
    AggchainProofURL={{ .Values.config.aggSender.aggchainProofURL | quote }}
    RequireNoFEPBlockGap = true

    {{ if .Values.config.aggSender.optimisticModeEnabled }}
    [AggSender.OptimisticModeConfig]
    SovereignRollupAddr = {{ .Values.config.l1.rollupAddress | quote }}
    # By default use the same key that aggsender  sign certs
    {{ if .Values.config.aggSender.privateKey.keyName }}
    TrustedSequencerKey = {Method ="GCP", KeyName={{ .Values.config.aggSender.privateKey.keyName | quote }}}
    {{ else }}
    TrustedSequencerKey = {Path = "/etc/aggkit/sequencer.keystore", Password = {{ index $opSecrets.data "sequencerPrivateKeyPassword" | b64dec | quote }}}
    {{ end }}
    OpNodeURL = "http://op-node:9545"
    RequireKeyMatchTrustedSequencer = true
    {{ end }}

    [AggSender.AgglayerClient]
    UseTLS = {{ .Values.config.aggSender.agglayerClient.useTLS | quote }}

    {{- end }}

    {{- if has "aggoracle" .Values.config.components }}

    [AggOracle.EVMSender]
    GlobalExitRootL2 = {{ .Values.config.l2.globalExitRootAddress | quote }}

    [AggOracle.EVMSender.EthTxManager]
    {{ if .Values.config.aggOracle.privateKey.keyName }}
    PrivateKeys = [{Method ="GCP", KeyName={{ .Values.config.aggOracle.privateKey.keyName | quote }}}]
    {{ else }}
    PrivateKeys = [{Path = "/etc/aggkit/aggoracle.keystore", Password = {{ index $opSecrets.data "aggoraclePrivateKeyPassword" | b64dec | quote }}}]
    {{ end }}

    [AggOracle.EVMSender.EthTxManager.Etherman]
    L1ChainID = {{ .Values.config.l2.chainId | int }}
    
    {{- end }}

    [BridgeL2Sync]
    BridgeAddr = {{ .Values.config.l2.bridgeAddress | quote }}

    [L1InfoTreeSync]
    BlockFinality="FinalizedBlock"
    SyncBlockChunkSize=1000
    InitialBlock = {{ .Values.config.l1.rollupManagerBlockNumber | int }}

    [REST]
    Port = {{ .Values.container.ports.bridge | quote }}
