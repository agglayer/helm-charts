{{- $rpcHost := "" }}
{{- $rpcPort := "" }}
{{- $l1ChainID := 11155111 }}
{{- $l1NodeURL := "" }}
{{- $l1NodeURLWS := "" }}
{{- $l1RollupManagerContract := "" }}
{{- $datadogApiKey := "" }}
{{- $kmsKeyName := "" }}
{{- $projectId := "" }}
{{- $location := "" }}
{{- $keyring := "" }}
{{- $keyName := "" }}
{{- $keyVersion := "" }}
{{- $fullNodeRPCs := "" }}
{{- $proofSigners := "" }}
{{- $opSecrets := (lookup "v1" "Secret" .Release.Namespace "op-secrets") }}
{{- if $opSecrets.data }}
    {{- if (index $opSecrets.data "DATA_NODE_RPC_HOST") }}
        {{- $rpcHost = index $opSecrets.data "DATA_NODE_RPC_HOST" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_RPC_PORT") }}
        {{- $rpcPort = index $opSecrets.data "DATA_NODE_RPC_PORT" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_L1_CHAINID") }}
        {{- $l1ChainID = index $opSecrets.data "DATA_NODE_L1_CHAINID" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_L1_NODEURL") }}
        {{- $l1NodeURL = index $opSecrets.data "DATA_NODE_L1_NODEURL" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_L1_NODEURL_WS") }}
        {{- $l1NodeURLWS = index $opSecrets.data "DATA_NODE_L1_NODEURL_WS" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_L1_ROLLUPMANAGERCONTRACT") }}
        {{- $l1RollupManagerContract = index $opSecrets.data "DATA_NODE_L1_ROLLUPMANAGERCONTRACT" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "datadog_api_key") }}
        {{- $datadogApiKey = index $opSecrets.data "datadog_api_key" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_KMSKEYNAME") }}
        {{- $kmsKeyName = index $opSecrets.data "DATA_NODE_KMSKEYNAME" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_PROJECTID") }}
        {{- $projectId = index $opSecrets.data "DATA_NODE_PROJECTID" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_LOCATION") }}
        {{- $location = index $opSecrets.data "DATA_NODE_LOCATION" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_KEYRING") }}
        {{- $keyring = index $opSecrets.data "DATA_NODE_KEYRING" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_KEYNAME") }}
        {{- $keyName = index $opSecrets.data "DATA_NODE_KEYNAME" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_KEYVERSION") }}
        {{- $keyVersion = index $opSecrets.data "DATA_NODE_KEYVERSION" | b64dec }}
    {{- end }}
    {{- if (index $opSecrets.data "DATA_NODE_PROOFSIGNERS") }}
        {{- $proofSigners = index $opSecrets.data "DATA_NODE_PROOFSIGNERS" | b64dec }}
    {{- end }}
{{- end }}

prover-entrypoint = {{ .Values.agglayerProverEndpoint | quote }}

[full-node-rpcs]
{{- range $key, $value := .Values.fullNodeRPCs }}
{{ $key }} = {{ $value | quote }}
{{- end }}

[proof-signers]
{{- range split "\n" $proofSigners }}
    {{- if ne . "" }}
        {{- $signer := split "," . }}
            {{ $signer._0 }}={{ $signer._1 | quote }}
    {{- end }}
{{- end }}

[rpc]
host = "0.0.0.0"
port = 4444
read-timeout = "60s"
write-timeout = "60s"
max-requests-per-ip-and-second = 5000

[outbound.rpc.settle]
max-retries = 3
retry-interval = 7
confirmations = 1
settlement-timeout = 1200

[log]
environment = "production" # "production" or "development"
level = "info"
outputs = ["stderr"]
format = "json"

[auth.gcpkms]
project-id = {{ $projectId | quote }}
location = {{ $location | quote }}
keyring = {{ $keyring | quote }}
key-name = {{ $keyName | quote }}
key-version = {{ $keyVersion | atoi }}

[l1]
chain-id = {{ $l1ChainID | atoi }}
node-url = {{ $l1NodeURL | quote }}
ws-node-url = {{ $l1NodeURLWS | quote }}
rollup-manager-contract = {{ $l1RollupManagerContract | quote }}
rpc-timeout = 45

[l2]
rpc-timeout = 45

[telemetry]
prometheus-addr = "0.0.0.0:2223"

[rate-limiting]
send-tx = "unlimited"

[rate-limiting.network]

[epoch.block-clock]
epoch-duration = 15
genesis-block = 0

[shutdown]
runtime-timeout = 5

[certificate-orchestrator]
input-backpressure-buffer-size = 1000

[certificate-orchestrator.prover.sp1-local] 

[storage]
db-path = {{ .Values.storage.path | quote }}