apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "agglayer.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "agglayer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "agglayer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # https://cloud.google.com/kubernetes-engine/docs/how-to/extended-duration-pods
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        # https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/ephemeral-storage-limit: 1Gi
        ad.datadoghq.com/{{ .Chart.Name }}.checks: |
          {
            "openmetrics": {
              "init_config": {},
              "instances": [
                {
                  "openmetrics_endpoint": "http://%%host%%:2223/metrics",
                  "metrics": [
                    {"execute": "agglayer.execute"},
                    {"check_tx": "agglayer.check_tx"},
                    {"send_tx": "agglayer.send_tx"},
                    {"settle": "agglayer.settle"},
                    {"target_info": "agglayer.target_info"},
                    {"verify_signature": "agglayer.verify_signature"},
                    {"verify_zkp": "agglayer.verify_zkp"}
                  ]
                }
              ]
            }
          }
      labels:
        {{- include "agglayer.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agglayer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      shareProcessNamespace: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - agglayer
            - run
          args:
            - "--cfg"
            - "/etc/agglayer/config.toml"
          ports:
            - containerPort: {{ .Values.ports.app }}
            - containerPort: {{ .Values.ports.telemetry }}
          # TMP: disabling probes for now as the new version doesn't expose API until it's synced with l1
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.ports.app }}
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.ports.app }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/etc/agglayer"
              name: config
              readOnly: true
            - mountPath: {{ .Values.storage.path | quote }}
              name: data
            - name: backup
              mountPath: {{ .Values.backup.path | quote }}
              readOnly: false
      tolerations:
      - key: group
        operator: Equal
        value: "agglayer"
        effect: NoSchedule
      nodeSelector:
        group: "agglayer"
      volumes:
        - name: config
          configMap:
            name: agglayer-config
            items:
              - key: "config.toml"
                path: "config.toml"
        - name: backup
          persistentVolumeClaim:
            claimName: {{ include "agglayer.fullname" . }}-backup-pvc
            readOnly: false
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ include "agglayer.fullname" . }}
        resources:
          requests:
            storage: {{ .Values.storage.size }}
